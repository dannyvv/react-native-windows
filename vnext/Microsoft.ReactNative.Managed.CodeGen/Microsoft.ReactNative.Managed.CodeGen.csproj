<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <RuntimeIdentifiers>win-x64;win-x86</RuntimeIdentifiers>
    <Nullable>enable</Nullable>
    <LangVersion>8.0</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <!--
      This file is linked because we want to use this to esnure the names of the code we parse line up and gives us compile errors if not.
      But we don't want to actually link against the Microsfot.ReactNative.Managed assembly becuase then we would have a cyclic dependency
      to compile-time generate the state for that assembly.
    -->
    <Compile Include="..\Microsoft.ReactNative.SharedManaged\ReactAttributes.cs" Link="ReactAttributes.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Humanizer" Version="2.8.11" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.5.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="3.5.0" />
    <PackageReference Include="RuntimeContracts" Version="0.3.0" />
  </ItemGroup>

  <!-- 
    This target is used to ensure the tool is deployed and can be used from source.
    It will return all deployed files so the caller can implement incrementality properly
   -->
  <Target Name="PublishTool" DependsOnTargets="Build;Publish" Returns="@(_PublishToolAllFiles)">
    <ItemGroup>
      <_PublishToolAllRelativePaths Include="$(PublishDir)\**" />
      <_PublishToolAllFiles Include="@(_PublishToolAllRelativePaths->'%(fullpath)')" />
    </ItemGroup>
  </Target>

  <!-- 
    This target returns the location of the deployed executable.
  -->
  <Target Name="GetPublishedToolPath" DependsOnTargets="PublishTool" Returns="$(_PublishedToolExecutable)">
    <PropertyGroup>
      <_PublishedToolExecutable>$([System.IO.Path]::GetFullPath('$(PublishDir)'))$(_DeploymentApplicationManifestIdentity)</_PublishedToolExecutable>
    </PropertyGroup>
  </Target>


</Project>
